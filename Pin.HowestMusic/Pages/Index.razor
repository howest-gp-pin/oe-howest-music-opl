@page "/"
@inject ICrudService<Track> trackService;
@inject ICrudService<Genre> genreService;



<PageTitle>Index</PageTitle>

<TrackRankingItem Ranking="1" TrackName="Selecta"></TrackRankingItem>

<h1>Howest favorite songs</h1>

@if(currentTrack == null)
{
    <TrackList Tracks="allTracks" OnAdd="AddTrack" OnEdit="EditTrack" OnDelete="RemoveTrack"></TrackList>
}
else
{
    <TrackForm Track="currentTrack" AvailableGenres="allGenres" OnSave="SaveTrack" OnCancel="Cancel"></TrackForm>
}

@code {
    private Genre[] allGenres;
    private Track[] allTracks;
    private Track[] favouriteTrackList;

    private Track currentTrack = null;

    protected async override Task OnInitializedAsync()
    {
        await RefreshTracks();
        allGenres = (await genreService.GetAllAsync()).ToArray();
    }

    private void AddTrack()
    {
        currentTrack = new Track();
    }

    private async void SaveTrack(Track track)
    {
        if (track.Id == Guid.Empty)
        {
            await trackService.CreateAsync(track);
        }
        else
        {
            await trackService.UpdateAsync(track);
        }
        await RefreshTracks();
        currentTrack = null;
    }

    private async void EditTrack(Track trackToEdit)
    {
        currentTrack = trackToEdit;
    }

    private async void RemoveTrack(Track trackToDelete)
    {
        await trackService.DeleteAsync(trackToDelete.Id);

    }

    private async Task RefreshTracks()
    {
        allTracks = (await trackService.GetAllAsync()).ToArray();
    }

    private void Cancel()
    {
        currentTrack = null;
    }
}

